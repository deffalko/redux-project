{"ast":null,"code":"import{Badge}from\"UI/Badge\";import{Card}from\"UI/Card\";import{Stack}from\"UI/Stack\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const JobPosition=_ref=>{let{id,company,logo,new:isNew,featured,position,role,level,postedAt,contract,location,languages,tools,handleAddFilter}=_ref;const badges=[].concat(role,level,...languages,...tools);return/*#__PURE__*/_jsx(Card,{isFeatured:featured,children:/*#__PURE__*/_jsxs(\"div\",{className:\"job-position\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"job-position-info\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"job-position-avatar\",src:logo,alt:company}),/*#__PURE__*/_jsxs(\"div\",{className:\"job-position-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"job-postion-company\",children:[/*#__PURE__*/_jsx(\"h3\",{children:company}),(isNew||featured)&&/*#__PURE__*/_jsxs(Stack,{children:[isNew&&/*#__PURE__*/_jsx(Badge,{variant:\"rounded\",colorScheme:\"primary\",children:\"NEW!\"}),featured&&/*#__PURE__*/_jsx(Badge,{variant:\"rounded\",colorScheme:\"dark\",children:\"FEATURED\"})]})]}),/*#__PURE__*/_jsx(\"h2\",{className:\"job-position-title\",children:position}),/*#__PURE__*/_jsxs(Stack,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"job-position-meta\",children:postedAt}),/*#__PURE__*/_jsx(\"div\",{className:\"job-position-meta\",children:contract}),/*#__PURE__*/_jsx(\"div\",{className:\"job-position-meta\",children:location})]})]})]}),/*#__PURE__*/_jsx(Stack,{children:badges.map(item=>/*#__PURE__*/_jsx(Badge,{onClick:()=>handleAddFilter(item),children:item},item))})]})});};export{JobPosition};","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-project/src/components/JobPosition.jsx"],"names":["Badge","Card","Stack","JobPosition","id","company","logo","new","isNew","featured","position","role","level","postedAt","contract","location","languages","tools","handleAddFilter","badges","concat","map","item"],"mappings":"AACA,OAASA,KAAT,KAAsB,UAAtB,CACA,OAASC,IAAT,KAAqB,SAArB,CACA,OAASC,KAAT,KAAsB,UAAtB,C,wFAEA,KAAMC,CAAAA,WAAW,CAAG,MAed,IAfe,CACnBC,EADmB,CAEnBC,OAFmB,CAGnBC,IAHmB,CAInBC,GAAG,CAAEC,KAJc,CAKnBC,QALmB,CAMnBC,QANmB,CAOnBC,IAPmB,CAQnBC,KARmB,CASnBC,QATmB,CAUnBC,QAVmB,CAWnBC,QAXmB,CAYnBC,SAZmB,CAanBC,KAbmB,CAcnBC,eAdmB,CAef,MACJ,KAAMC,CAAAA,MAAM,CAAG,GAAGC,MAAH,CAAUT,IAAV,CAAgBC,KAAhB,CAAuB,GAAGI,SAA1B,CAAqC,GAAGC,KAAxC,CAAf,CAEA,mBACE,KAAC,IAAD,EAAM,UAAU,CAAER,QAAlB,uBACE,aAAK,SAAS,CAAC,cAAf,wBACE,aAAK,SAAS,CAAC,mBAAf,wBACE,YAAK,SAAS,CAAC,qBAAf,CAAqC,GAAG,CAAEH,IAA1C,CAAgD,GAAG,CAAED,OAArD,EADF,cAEE,aAAK,SAAS,CAAC,mBAAf,wBACE,aAAK,SAAS,CAAC,qBAAf,wBACE,oBAAKA,OAAL,EADF,CAEG,CAACG,KAAK,EAAIC,QAAV,gBACC,MAAC,KAAD,YACGD,KAAK,eACJ,KAAC,KAAD,EAAO,OAAO,CAAC,SAAf,CAAyB,WAAW,CAAC,SAArC,kBAFJ,CAMGC,QAAQ,eACP,KAAC,KAAD,EAAO,OAAO,CAAC,SAAf,CAAyB,WAAW,CAAC,MAArC,sBAPJ,GAHJ,GADF,cAkBE,WAAI,SAAS,CAAC,oBAAd,UAAoCC,QAApC,EAlBF,cAmBE,MAAC,KAAD,yBACE,YAAK,SAAS,CAAC,mBAAf,UAAoCG,QAApC,EADF,cAEE,YAAK,SAAS,CAAC,mBAAf,UAAoCC,QAApC,EAFF,cAGE,YAAK,SAAS,CAAC,mBAAf,UAAoCC,QAApC,EAHF,GAnBF,GAFF,GADF,cA6BE,KAAC,KAAD,WACGI,MAAM,CAACE,GAAP,CAAYC,IAAD,eACV,KAAC,KAAD,EAAkB,OAAO,CAAE,IAAMJ,eAAe,CAACI,IAAD,CAAhD,UACGA,IADH,EAAYA,IAAZ,CADD,CADH,EA7BF,GADF,EADF,CAyCD,CA3DD,CA6DA,OAASnB,WAAT","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Badge } from \"UI/Badge\";\nimport { Card } from \"UI/Card\";\nimport { Stack } from \"UI/Stack\";\n\nconst JobPosition = ({\n  id,\n  company,\n  logo,\n  new: isNew,\n  featured,\n  position,\n  role,\n  level,\n  postedAt,\n  contract,\n  location,\n  languages,\n  tools,\n  handleAddFilter,\n}) => {\n  const badges = [].concat(role, level, ...languages, ...tools);\n\n  return (\n    <Card isFeatured={featured}>\n      <div className=\"job-position\">\n        <div className=\"job-position-info\">\n          <img className=\"job-position-avatar\" src={logo} alt={company} />\n          <div className=\"job-position-body\">\n            <div className=\"job-postion-company\">\n              <h3>{company}</h3>\n              {(isNew || featured) && (\n                <Stack>\n                  {isNew && (\n                    <Badge variant=\"rounded\" colorScheme=\"primary\">\n                      NEW!\n                    </Badge>\n                  )}\n                  {featured && (\n                    <Badge variant=\"rounded\" colorScheme=\"dark\">\n                      FEATURED\n                    </Badge>\n                  )}\n                </Stack>\n              )}\n            </div>\n            <h2 className=\"job-position-title\">{position}</h2>\n            <Stack>\n              <div className=\"job-position-meta\">{postedAt}</div>\n              <div className=\"job-position-meta\">{contract}</div>\n              <div className=\"job-position-meta\">{location}</div>\n            </Stack>\n          </div>\n        </div>\n        <Stack>\n          {badges.map((item) => (\n            <Badge key={item} onClick={() => handleAddFilter(item)}>\n              {item}\n            </Badge>\n          ))}\n        </Stack>\n      </div>\n    </Card>\n  );\n};\n\nexport { JobPosition };\n\nJobPosition.propTypes = {\n  id: PropTypes.number,\n  company: PropTypes.string,\n  logo: PropTypes.string,\n  new: PropTypes.bool,\n  featured: PropTypes.bool,\n  position: PropTypes.string,\n  role: PropTypes.string,\n  level: PropTypes.string,\n  postedAt: PropTypes.string,\n  contract: PropTypes.string,\n  location: PropTypes.string,\n  languages: PropTypes.arrayOf(PropTypes.string),\n  tools: PropTypes.arrayOf(PropTypes.string),\n  handleAddFilter: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumar\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\redux-project\\\\src\\\\components\\\\JobPosition.jsx\";\nimport PropTypes from \"prop-types\";\nimport { Badge } from \"UI/Badge\";\nimport { Card } from \"UI/Card\";\nimport { Stack } from \"UI/Stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobPosition = _ref => {\n  let {\n    id,\n    company,\n    logo,\n    new: isNew,\n    featured,\n    position,\n    role,\n    level,\n    postedAt,\n    contract,\n    location,\n    languages,\n    tools,\n    handleAddFilter\n  } = _ref;\n  const badges = [].concat(role, level, ...languages, ...tools);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isFeatured: featured,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-position\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-position-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"job-position-avatar\",\n          src: logo,\n          alt: company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-position-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-postion-company\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), (isNew || featured) && /*#__PURE__*/_jsxDEV(Stack, {\n              children: [isNew && /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"rounded\",\n                colorScheme: \"primary\",\n                children: \"NEW!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 21\n              }, this), featured && /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"rounded\",\n                colorScheme: \"dark\",\n                children: \"FEATURED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"job-position-title\",\n            children: position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-position-meta\",\n              children: postedAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-position-meta\",\n              children: contract\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-position-meta\",\n              children: location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: badges.map(item => /*#__PURE__*/_jsxDEV(Badge, {\n          onClick: () => handleAddFilter(item),\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = JobPosition;\nexport { JobPosition };\nJobPosition.propTypes = {\n  id: PropTypes.number,\n  company: PropTypes.string,\n  logo: PropTypes.string,\n  new: PropTypes.bool,\n  featured: PropTypes.bool,\n  position: PropTypes.string,\n  role: PropTypes.string,\n  level: PropTypes.string,\n  postedAt: PropTypes.string,\n  contract: PropTypes.string,\n  location: PropTypes.string,\n  languages: PropTypes.arrayOf(PropTypes.string),\n  tools: PropTypes.arrayOf(PropTypes.string),\n  handleAddFilter: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"JobPosition\");","map":{"version":3,"sources":["C:/Users/gumar/OneDrive/Рабочий стол/redux-project/src/components/JobPosition.jsx"],"names":["PropTypes","Badge","Card","Stack","JobPosition","id","company","logo","new","isNew","featured","position","role","level","postedAt","contract","location","languages","tools","handleAddFilter","badges","concat","map","item","propTypes","number","string","bool","arrayOf","func"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Badge } from \"UI/Badge\";\nimport { Card } from \"UI/Card\";\nimport { Stack } from \"UI/Stack\";\n\nconst JobPosition = ({\n  id,\n  company,\n  logo,\n  new: isNew,\n  featured,\n  position,\n  role,\n  level,\n  postedAt,\n  contract,\n  location,\n  languages,\n  tools,\n  handleAddFilter,\n}) => {\n  const badges = [].concat(role, level, ...languages, ...tools);\n\n  return (\n    <Card isFeatured={featured}>\n      <div className=\"job-position\">\n        <div className=\"job-position-info\">\n          <img className=\"job-position-avatar\" src={logo} alt={company} />\n          <div className=\"job-position-body\">\n            <div className=\"job-postion-company\">\n              <h3>{company}</h3>\n              {(isNew || featured) && (\n                <Stack>\n                  {isNew && (\n                    <Badge variant=\"rounded\" colorScheme=\"primary\">\n                      NEW!\n                    </Badge>\n                  )}\n                  {featured && (\n                    <Badge variant=\"rounded\" colorScheme=\"dark\">\n                      FEATURED\n                    </Badge>\n                  )}\n                </Stack>\n              )}\n            </div>\n            <h2 className=\"job-position-title\">{position}</h2>\n            <Stack>\n              <div className=\"job-position-meta\">{postedAt}</div>\n              <div className=\"job-position-meta\">{contract}</div>\n              <div className=\"job-position-meta\">{location}</div>\n            </Stack>\n          </div>\n        </div>\n        <Stack>\n          {badges.map((item) => (\n            <Badge key={item} onClick={() => handleAddFilter(item)}>\n              {item}\n            </Badge>\n          ))}\n        </Stack>\n      </div>\n    </Card>\n  );\n};\n\nexport { JobPosition };\n\nJobPosition.propTypes = {\n  id: PropTypes.number,\n  company: PropTypes.string,\n  logo: PropTypes.string,\n  new: PropTypes.bool,\n  featured: PropTypes.bool,\n  position: PropTypes.string,\n  role: PropTypes.string,\n  level: PropTypes.string,\n  postedAt: PropTypes.string,\n  contract: PropTypes.string,\n  location: PropTypes.string,\n  languages: PropTypes.arrayOf(PropTypes.string),\n  tools: PropTypes.arrayOf(PropTypes.string),\n  handleAddFilter: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}